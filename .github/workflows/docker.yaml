name: Publish Docker image

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string

jobs:
  build_and_push:
    name: Build and push Docker image to Github Container Registry
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        arch: [arm64, amd64]
    outputs:
      latest-tag: ${{ steps.latest-tag.outputs.latest-tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Get latest tag
        id: latest-tag
        if: github.event_name == 'workflow_dispatch'
        run: |
          git fetch --prune --unshallow
          echo "latest-tag=$(git describe --tags --abbrev=0)"

      - name: Checkout latest tag
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.latest-tag.outputs.latest-tag }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest-${{ matrix.arch }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .github/workflows/docker/Dockerfile.${{ matrix.arch }}
          push: true
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}

  create_manifest_and_push:
    name: Create manifest and push
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ inputs.tag }},enable=${{ github.event_name != 'workflow_dispatch' }}
            type=raw,value=${{ needs.build_and_push.outputs.latest-tag }},enable=${{ github.event_name == 'workflow_dispatch' }}
            type=raw,value=latest
      
      - name: Convert tags
        id: tags
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const rawTags = `${{ steps.meta.outputs.tags }}`
            const tagList = rawTags.split("\n")
            const tags = tagList.join(",")

            return tags

      - name: Create and push manifest images
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          images: ghcr.io/${{ github.repository }}:latest-amd64,ghcr.io/${{ github.repository }}:latest-arm64
          inputs: ${{ steps.tags.outputs.result }}
          push: true
